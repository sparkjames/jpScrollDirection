{"mappings":"AEAA,IACW,EADP,EAAA,EAAmB,EA+BvB,OAAO,gBAAgB,CAAC,SAvBxB,WACC,GAAI,CAGH,IAAI,EAAY,OAAO,WAAW,EAAI,OAAO,OAAO,EAAI,SAAS,eAAe,CAAC,SAAS,CAGzF,EADG,EAAY,EACM,OAEA,KAGtB,EAAmB,GAAa,EAAI,EAAI,CAEzC,CACA,MAAM,EAAM,CACX,QAAQ,GAAG,CAAC,yCAA0C,EACvD,CAEA,OAAO,CACR,EAG4D,CAAE,QAAS,CAAA,CAAK,GD7B5E,OAAO,gBAAgB,CAAC,SAAU,WACjC,QAAQ,GAAG,CAAC,wBAAyB,EACtC,EAAG,CAAC,QAAQ,CAAA,CAAI","sources":["<anon>","index.js","src/jpScrollDirection.js"],"sourcesContent":["(function () {\nvar $4ddcbf877f08851e$var$jp_lastScrollTop = 0;\nvar $4ddcbf877f08851e$export$a3fb0524587340d3;\n/**\n * Compares the distance scrolled on the page to determine when the user is scrolling down or up.\n * \n * @return string|null Either 'down' or 'up', however the value is null before any scrolling has occurred .\n */ function $4ddcbf877f08851e$var$jp_updateScrollDirection() {\n    try {\n        // Try a couple older sources of the \"distance scrolled from top\" value, this adds some older browsers for compatibility.\n        var scrollTop = window.pageYOffset || window.scrollY || document.documentElement.scrollTop;\n        if (scrollTop > $4ddcbf877f08851e$var$jp_lastScrollTop) $4ddcbf877f08851e$export$a3fb0524587340d3 = \"down\";\n        else $4ddcbf877f08851e$export$a3fb0524587340d3 = \"up\";\n        $4ddcbf877f08851e$var$jp_lastScrollTop = scrollTop <= 0 ? 0 : scrollTop; // Set the last scrollTop value, and make sure the scrolling doesn't go negative.\n    } catch (error) {\n        console.log(\"Error with scroll direction detection:\", error);\n    }\n    return $4ddcbf877f08851e$export$a3fb0524587340d3;\n}\n// Update the scroll direction on the `scroll` event.\nwindow.addEventListener(\"scroll\", $4ddcbf877f08851e$var$jp_updateScrollDirection, {\n    passive: true\n});\n\n\nwindow.addEventListener(\"scroll\", function() {\n    console.log(\"jp_scrollDirection = \", (0, $4ddcbf877f08851e$export$a3fb0524587340d3));\n}, {\n    passive: true\n});\n\n})();\n//# sourceMappingURL=index.js.map\n","import { jp_scrollDirection } from './src/jpScrollDirection.js';\n\nwindow.addEventListener('scroll', () => {\n\tconsole.log('jp_scrollDirection = ', jp_scrollDirection);\n}, {passive:true});\n","let jp_lastScrollTop = 0;\nexport let jp_scrollDirection;\n\n/**\n * Compares the distance scrolled on the page to determine when the user is scrolling down or up.\n * \n * @return string|null Either 'down' or 'up', however the value is null before any scrolling has occurred .\n */\nfunction jp_updateScrollDirection() {\n\ttry {\n\n\t\t// Try a couple older sources of the \"distance scrolled from top\" value, this adds some older browsers for compatibility.\n\t\tlet scrollTop = window.pageYOffset || window.scrollY || document.documentElement.scrollTop;\n\n\t\tif (scrollTop > jp_lastScrollTop){\n\t\t\tjp_scrollDirection = 'down';\n\t\t} else {\n\t\t\tjp_scrollDirection = 'up';\n\t\t}\n\n\t\tjp_lastScrollTop = scrollTop <= 0 ? 0 : scrollTop; // Set the last scrollTop value, and make sure the scrolling doesn't go negative.\n\n\t}\n\tcatch(error){\n\t\tconsole.log('Error with scroll direction detection:', error);\n\t}\n\n\treturn jp_scrollDirection;\n};\n\n// Update the scroll direction on the `scroll` event.\nwindow.addEventListener('scroll', jp_updateScrollDirection, { passive: true });\n"],"names":["$4ddcbf877f08851e$export$a3fb0524587340d3","$4ddcbf877f08851e$var$jp_lastScrollTop","window","addEventListener","scrollTop","pageYOffset","scrollY","document","documentElement","error","console","log","passive"],"version":3,"file":"index.js.map"}